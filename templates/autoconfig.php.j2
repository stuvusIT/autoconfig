<?php
// {{ ansible_managed }}
header("Content-type: text/xml; charset=utf-8");
//error_reporting(E_ALL);
//ini_set('error_reporting', E_ALL);
//ini_set('display_errors',1);

// init
$new_address = $_GET["emailaddress"];

// config
$ldapserver = '{{ autoconfig_server }}';
$ldapuser   = "{{ autoconfig_user_dn }}";
$ldappass   = "{{ autoconfig_password }}";
$ldaptree   = "{{ autoconfig_tree }}";

// connect
$ldapconn = ldap_connect($ldapserver) or die("Could not connect to LDAP server.");
ldap_set_option($ldapconn, LDAP_OPT_PROTOCOL_VERSION, 3) ;

if($ldapconn) {
    // binding to ldap server
    $ldapbind = ldap_bind($ldapconn, $ldapuser, $ldappass) or die ("Error trying to bind: ".ldap_error($ldapconn));
    // verify binding
    if ($ldapbind) {
        $mail = $_GET["emailaddress"];
        $mail_escaped = ldap_escape($mail, "", LDAP_ESCAPE_FILTER);
        $filter = "(|(mail=".$mail_escaped.")(gosaMailAlternateAddress=".$mail_escaped."))";
        $justthese = array("uid");
        $result = ldap_search($ldapconn, $ldaptree, $filter, $justthese) or die ("Error in search query: ".ldap_error($ldapconn));
        $data = ldap_get_entries($ldapconn, $result);
        if($data["count"]==1){
            $new_address = $data[0]["uid"][0];
        }
    } else {
        echo "LDAP bind failed...";
    }
}
// all done? clean up
ldap_close($ldapconn);
?>
<?xml version="1.0" encoding="UTF-8"?>
<clientConfig version="1.1">
  <emailProvider id="{{ autoconfig_domain }}">
    <domain>{{ autoconfig_domain }}</domain>
    <displayName>{{ autoconfig_name }}</displayName>
    <displayShortName>{{ autoconfig_short_name }}</displayShortName>
    {% for server in autoconfig_incoming_server %}
    <incomingServer type="imap">
      <hostname>{{ server.hostname }}</hostname>
      <port>{{ server.port }}</port>
      <socketType>{{ server.socketType }}</socketType>
      <authentication>{{ server.authentication }}</authentication>
      <username><?php echo $new_address; ?></username>
    </incomingServer>
    {% endfor %}
    {% for server in autoconfig_outgoing_server %}
    <outgoingServer type="smtp">
      <hostname>{{ server.hostname }}</hostname>
      <port>{{ server.port }}</port>
      <socketType>{{ server.socketType }}</socketType>
      <username><?php echo $new_address; ?></username>
    </outgoingServer>
    {% endfor %}
    {% for config in autoconfig_documentation %}
    <documentation url="{{ config.url }}">
      <descr lang="de">{{ config.de }}</descr>
      <descr lang="en">{{ config.en }}</descr>
    </documentation>
    {% endfor %}
  </emailProvider>
</clientConfig>
